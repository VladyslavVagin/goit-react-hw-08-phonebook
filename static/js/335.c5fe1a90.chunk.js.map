{"version":3,"file":"static/js/335.c5fe1a90.chunk.js","mappings":"4MACA,EAA6B,2BAA7B,EAAgE,sBAAhE,EAA8F,sBAA9F,EAAgI,0BAAhI,EAAsK,0BAAtK,EAAiN,+BAAjN,EAA6P,2B,qECQvPA,EAAgB,CACpBC,KAAM,GACNC,MAAO,GACPC,SAAU,IAGNC,EAASC,EAAAA,KAAaC,MAAM,CAChCL,KAAMI,EAAAA,KAAaE,IAAI,GAAGC,IAAI,IAAIC,WAClCP,MAAOG,EAAAA,KAAaE,IAAI,GAAGE,WAC3BN,SAAUE,EAAAA,KAAaE,IAAI,GAAGC,IAAI,IAAIC,aA2DxC,EAxDe,WACb,IAAMC,GAAWC,EAAAA,EAAAA,MACjBC,GAAwCC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAhDI,EAAYF,EAAA,GAAEG,EAAeH,EAAA,GAC5BI,GAAcC,EAAAA,EAAAA,KAAdD,UAOR,OACEE,EAAAA,EAAAA,KAAA,OAAAC,UACED,EAAAA,EAAAA,KAACE,EAAAA,GAAM,CACLtB,cAAeA,EACfuB,SAT2B,SAACC,EAAQC,GAAqB,IAAjBC,EAASD,EAATC,UAC5ChB,GAASiB,EAAAA,EAAAA,IAASH,IAClBE,GACF,EAOME,iBAAkBxB,EAAOiB,UAEzBQ,EAAAA,EAAAA,MAACC,EAAAA,GAAI,CAACC,UAAWC,EAAeX,SAAA,EAC9BD,EAAAA,EAAAA,KAAA,MAAIW,UAAWC,EAAcX,SAAC,uBAC9BQ,EAAAA,EAAAA,MAAA,SAAOI,QAAQ,OAAOF,UAAWC,EAAUX,SAAA,EACzCD,EAAAA,EAAAA,KAAA,QAAMW,UAAWC,EAAcX,SAAC,MAAY,SAC5CD,EAAAA,EAAAA,KAACc,EAAAA,GAAK,CAACC,KAAK,OAAOlC,KAAK,OAAOQ,UAAQ,EAACsB,UAAWC,KACnDZ,EAAAA,EAAAA,KAAA,QAAMW,UAAWC,EAAeX,SAAC,yBAEnCQ,EAAAA,EAAAA,MAAA,SAAOI,QAAQ,QAAQF,UAAWC,EAAUX,SAAA,EAC1CD,EAAAA,EAAAA,KAAA,QAAMW,UAAWC,EAAcX,SAAC,MAAY,UAC5CD,EAAAA,EAAAA,KAACc,EAAAA,GAAK,CAACC,KAAK,QAAQlC,KAAK,QAAQQ,UAAQ,EAACsB,UAAWC,QAEvDH,EAAAA,EAAAA,MAAA,SAAOI,QAAQ,WAAWF,UAAWC,EAAUX,SAAA,EAC7CD,EAAAA,EAAAA,KAAA,QAAMW,UAAWC,EAAcX,SAAC,MAAY,aAC5CD,EAAAA,EAAAA,KAACc,EAAAA,GAAK,CACJC,KAAMnB,EAAe,OAAS,WAC9Bf,KAAK,WACLQ,UAAQ,EACRsB,UAAWC,KAEbZ,EAAAA,EAAAA,KAAA,QAAMW,UAAWC,EAAeX,SAAC,yBAEnCQ,EAAAA,EAAAA,MAAA,SAAOI,QAAQ,SAASF,UAAWC,EAAUX,SAAA,EAC3CD,EAAAA,EAAAA,KAACc,EAAAA,GAAK,CACJC,KAAK,WACLlC,KAAK,SACLmC,SAAU,kBAAMnB,GAAiBD,EAAa,EAC9CqB,QAASrB,IACR,IACFA,EAAe,gBAAkB,oBAEpCI,EAAAA,EAAAA,KAAA,UAAQe,KAAK,SAASJ,UAAWC,EAAmBX,SAClDH,GAAYE,EAAAA,EAAAA,KAACkB,EAAAA,EAAM,IAAK,mBAMpC,C","sources":["webpack://react-homework-template/./src/pages/Signup/Signup.module.css?8e2e","pages/Signup/Signup.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"formSignup\":\"Signup_formSignup__QLXUN\",\"input\":\"Signup_input__DYssa\",\"label\":\"Signup_label__TKN7Q\",\"astericks\":\"Signup_astericks__IZYjp\",\"titlePage\":\"Signup_titlePage__Q5usc\",\"registerSubmit\":\"Signup_registerSubmit__SxYp8\",\"additional\":\"Signup_additional__qdUyW\"};","import { Formik, Form, Field } from 'formik';\nimport css from './Signup.module.css';\nimport { useState } from 'react';\nimport * as yup from 'yup';\nimport { register } from '../../redux/auth/operations';\nimport { useDispatch } from 'react-redux';\nimport { useAuth } from '../../hooks/useAuth';\nimport Loader from '../../components/Loader/Loader';\n\nconst initialValues = {\n  name: '',\n  email: '',\n  password: '',\n};\n\nconst schema = yup.object().shape({\n  name: yup.string().min(1).max(24).required(),\n  email: yup.string().min(5).required(),\n  password: yup.string().min(6).max(16).required(),\n});\n\nconst Signup = () => {\n  const dispatch = useDispatch();\n  const [showPassword, setShowPassword] = useState(false);\n  const { isLoading } = useAuth();\n\n  const handleSubmitRegistration = (dataForm, { resetForm }) => {\n    dispatch(register(dataForm));\n    resetForm();\n  };\n\n  return (\n    <div>\n      <Formik\n        initialValues={initialValues}\n        onSubmit={handleSubmitRegistration}\n        validationSchema={schema}\n      >\n        <Form className={css.formSignup}>\n          <h2 className={css.titlePage}>Registration form</h2>\n          <label htmlFor=\"name\" className={css.label}>\n            <span className={css.astericks}>&#42;</span>Name:\n            <Field type=\"text\" name=\"name\" required className={css.input} />\n            <span className={css.additional}>(1 - 24) symbols</span>\n          </label>\n          <label htmlFor=\"email\" className={css.label}>\n            <span className={css.astericks}>&#42;</span>Email:\n            <Field type=\"email\" name=\"email\" required className={css.input} />\n          </label>\n          <label htmlFor=\"password\" className={css.label}>\n            <span className={css.astericks}>&#42;</span>Password:\n            <Field\n              type={showPassword ? 'text' : 'password'}\n              name=\"password\"\n              required\n              className={css.input}\n            />\n            <span className={css.additional}>(6 - 16) symbols</span>\n          </label>\n          <label htmlFor=\"toggle\" className={css.label}>\n            <Field\n              type=\"checkbox\"\n              name=\"toggle\"\n              onChange={() => setShowPassword(!showPassword)}\n              checked={showPassword}\n            />{' '}\n            {showPassword ? 'Hide password' : 'Show password'}\n          </label>\n          <button type=\"submit\" className={css.registerSubmit}>\n           {isLoading ? <Loader/> : 'Register'}\n          </button>\n        </Form>\n      </Formik>\n    </div>\n  );\n};\n\nexport default Signup;\n"],"names":["initialValues","name","email","password","schema","yup","shape","min","max","required","dispatch","useDispatch","_useState","useState","_useState2","_slicedToArray","showPassword","setShowPassword","isLoading","useAuth","_jsx","children","Formik","onSubmit","dataForm","_ref","resetForm","register","validationSchema","_jsxs","Form","className","css","htmlFor","Field","type","onChange","checked","Loader"],"sourceRoot":""}
{"version":3,"file":"static/js/910.f6e121f2.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/AddContactForm/AddContactForm.module.css?92ef","components/AddContactForm/AddContactForm.jsx","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","webpack://react-homework-template/./src/components/ListOfContacts/ListOfContacts.module.css?3f95","webpack://react-homework-template/./src/components/Contact/Contact.module.css?03fd","webpack://react-homework-template/./src/components/EditContactForm/EditContactForm.module.css?43d2","components/EditContactForm/EdirContactForm.jsx","components/Contact/Contact.jsx","redux/contacts/selectors.js","components/ListOfContacts/ListOfContacts.jsx","webpack://react-homework-template/./src/pages/Contacts/Contacts.module.css?fb9d","pages/Contacts/Contacts.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"contactForm\":\"AddContactForm_contactForm__1XbBB\",\"label\":\"AddContactForm_label__XseY1\",\"input\":\"AddContactForm_input__wYAJT\",\"addContactBtn\":\"AddContactForm_addContactBtn__jIc-x\",\"astericks\":\"AddContactForm_astericks__4cq2i\",\"additional\":\"AddContactForm_additional__2+ZZx\"};","import { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as yup from 'yup';\nimport css from './AddContactForm.module.css';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { toast } from 'react-toastify';\nimport { useAddContactMutation } from '../../redux/contacts/contactsAPI';\nimport Loader from 'components/Loader/Loader';\n\nconst initialValues = {\n  name: '',\n  number: '',\n};\n\nconst schema = yup.object().shape({\n  name: yup.string().min(1).max(24).required(),\n  number: yup.number().required(),\n});\n\nconst AddContactForm = ({ data, setShowAddContact }) => {\n  const [addContact, { isLoading }] = useAddContactMutation();\n\n  const handleSubmit = (dataForm, { resetForm }) => {\n    const contNames = data?.map(contact => contact.name);\n    if (!contNames.includes(dataForm.name)) {\n      addContact({\n        name: dataForm.name,\n        number: dataForm.number.replace(/(\\d{3})(\\d{3})(\\d{3})/, '$1-$2-$3'),\n      });\n      setShowAddContact(false);\n      toast.success(`Contact ${dataForm.name} was ADDED`);\n      resetForm();\n    } else {\n      toast.error('Contact with the same name has already exist!');\n    }\n  };\n\n  return (\n    <Formik\n      validationSchema={schema}\n      initialValues={initialValues}\n      onSubmit={handleSubmit}\n    >\n      <Form className={css.contactForm} autoComplete=\"true\">\n        <label className={css.label} htmlFor=\"name\">\n          <span className={css.astericks}>&#42;</span>Name:\n          <Field\n            type=\"text\"\n            name=\"name\"\n            className={css.input}\n            required\n            pattern=\"^[a-zA-Zа-яА-Я]+([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*$\"\n          />\n          <span className={css.additional}>(1 - 24) symbols</span>\n          <ErrorMessage name=\"name\" component=\"span\" />\n        </label>\n        <label className={css.label} htmlFor=\"number\">\n          <span className={css.astericks}>&#42;</span>Phone number:\n          <Field\n            type=\"tel\"\n            name=\"number\"\n            className={css.input}\n            required\n            pattern=\"[0-9]{9,12}\"\n          />\n          <span className={css.additional}>(9 - 12) numbers</span>{' '}\n          <ErrorMessage name=\"number\" component=\"span\" />{' '}\n        </label>\n        <button className={css.addContactBtn} type=\"submit\" title='Button for submit add contact form'>\n          {isLoading ? <Loader /> : 'Add contact'}\n        </button>\n      </Form>\n    </Formik>\n  );\n};\n\nexport default AddContactForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"filter\":\"Filter_filter__vxThR\"};","import css from './Filter.module.css'\nimport { useDispatch } from 'react-redux';\nimport { setQuery } from '../../redux/contacts/filterSlice';\n\n\nconst Filter = () => {\nconst dispatch = useDispatch();\n\nconst handleChange = (e) => {\n  const searchQuery = e.target.value;\n  dispatch(setQuery(searchQuery.toLowerCase()))\n}\n\n  return (\n    <label>\n      <input\n        className={css.filter}\n        name=\"filter\"\n        placeholder=\"Search...\"\n        type=\"search\"\n        onChange={handleChange}\n      />\n    </label>\n  );\n};\n\n\nexport default Filter;\n","// extracted by mini-css-extract-plugin\nexport default {\"tableContainer\":\"ListOfContacts_tableContainer__zt+q1\",\"table\":\"ListOfContacts_table__DvX+U\",\"th\":\"ListOfContacts_th__Hoj-6\",\"tr\":\"ListOfContacts_tr__G9ASs\",\"tbody\":\"ListOfContacts_tbody__kiDK4\",\"td\":\"ListOfContacts_td__LXkv1\"};","// extracted by mini-css-extract-plugin\nexport default {\"deleteBtn\":\"Contact_deleteBtn__L35yB\",\"tr\":\"Contact_tr__3GkWa\",\"deleteBtnCont\":\"Contact_deleteBtnCont__9NYe8\",\"phone\":\"Contact_phone__PxJLc\",\"name\":\"Contact_name__xbxVU\"};","// extracted by mini-css-extract-plugin\nexport default {\"td\":\"EditContactForm_td__Fxr2y\",\"input\":\"EditContactForm_input__+zEeD\",\"confirm\":\"EditContactForm_confirm__MCoF4\"};","import React from 'react';\nimport css from './EditContactForm.module.css';\n\nconst EditContactForm = ({ setNewName, setNewNumber, onClick }) => {\n\n  return (\n    <tr>\n      <td className={css.td}>\n        <input\n          type=\"text\"\n          name=\"name\"\n          required\n          className={css.input}\n          onChange={e => setNewName(e.target.value)}\n          pattern=\"^[a-zA-Zа-яА-Я]+([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*$\"\n          placeholder='New name'\n        />\n      </td>\n      <td className={css.td}>\n        <input\n          type=\"tel\"\n          name=\"number\"\n          required\n          className={css.input}\n          onChange={e => setNewNumber(e.target.value.replace(/(\\d{3})(\\d{3})(\\d{3})/, '$1-$2-$3'))}\n          pattern=\"[0-9]{9,12}\"\n          placeholder='New number'\n        />\n      </td>\n      <td className={css.td}>\n        <button type=\"button\" className={css.confirm} onClick={onClick} title='Confirm changes in contact button'>\n          OK\n        </button>\n      </td>\n    </tr>\n  );\n};\n\nexport default EditContactForm;\n","import trashIcon from '../../icons/trash.png';\nimport editIcon from '../../icons/edit-button.png';\nimport cancelIcon from '../../icons/forbidden.png';\nimport css from './Contact.module.css';\nimport {\n  useDeleteContactMutation,\n  useChangeContactMutation,\n  useGetContactsQuery,\n} from '../../redux/contacts/contactsAPI';\nimport { useState } from 'react';\nimport { toast } from 'react-toastify';\nimport EditContactForm from 'components/EditContactForm/EdirContactForm';\nimport Loader from 'components/Loader/Loader';\n\nconst Contact = ({ contact }) => {\n  const { id, name, number } = contact;\n  const [showEditForm, setShowEditForm] = useState(false);\n  const [newName, setNewName] = useState(name);\n  const [newNumber, setNewNumber] = useState(number);\n  const [deleteContact, { isLoading: isDeleting }] = useDeleteContactMutation();\n  const { data } = useGetContactsQuery();\n  const [changeContact] = useChangeContactMutation();\n  const contactExistName = data.some(cont => cont.name === newName & cont.id !== id || cont.number === newNumber & cont.id !== id);\n\n  const handleEditContact = () => {\n    setShowEditForm(false);\n    if (!contactExistName && newName.trim() !== '' && newNumber.trim() !== '') {\n      changeContact({ id, name: newName, number: newNumber });\n    } else {\n      toast.error('Error, incorrect input or same contact exists');\n    }\n  };\n\n  return (\n    <>\n      {showEditForm && (\n        <EditContactForm\n          setNewName={setNewName}\n          setNewNumber={setNewNumber}\n          onClick={handleEditContact}\n        />\n      )}\n      <tr className={css.tr}>\n        <td className={css.name}>\n          {' '}\n          <button\n            type=\"button\"\n            className={css.deleteBtn}\n            id={id}\n            onClick={() => setShowEditForm(!showEditForm)}\n            title=\"Edit contact\"\n          >\n            {showEditForm ? (\n              <img\n                src={cancelIcon}\n                alt=\"Cancel icon for close edit form\"\n                width={16}\n              />\n            ) : (\n              <img src={editIcon} alt=\"trash icon\" width={16} />\n            )}\n          </button>\n          {name}\n        </td>\n        <td className={css.phone}>{number}</td>\n        <td className={css.delete}>\n          {' '}\n          <div className={css.deleteBtnCont}>\n          <button\n            type=\"button\"\n            className={css.deleteBtn}\n            id={id}\n            onClick={() => deleteContact(id)}\n            title=\"Delete contact\"\n          >\n            {isDeleting ? (\n              <Loader />\n            ) : (\n              <img src={trashIcon} alt=\"trash icon\" width={16} />\n            )}\n          </button></div>\n        </td>\n      </tr>\n    </>\n  );\n};\n\nexport default Contact;\n","export const selectContacts = state => state.contacts.items;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectQuery = state => state.filter.query;","import css from './ListOfContacts.module.css';\nimport Contact from '../Contact/Contact';\nimport { selectQuery } from '../../redux/contacts/selectors';\nimport { useSelector } from 'react-redux';\n\nconst ListOfContacts = ({data, isSuccess}) => {\n  const filter = useSelector(selectQuery);\n\n  const filteredContacts = data?.filter(item => item.name.toLowerCase().includes(filter));\n\n  return (\n    <div className={css.tableContainer}>\n      <table className={css.table}>\n        <thead>\n          <tr>\n            <th className={css.th}>Name</th>\n            <th className={css.th}>Phone</th>\n            <th className={css.th}>DLT</th>\n          </tr>\n        </thead>\n        <tbody className={css.tbody}>\n          {isSuccess && filteredContacts?.map((contact) => {\n            return <Contact key={contact.id} contact={contact}/>;\n          })}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default ListOfContacts;\n","// extracted by mini-css-extract-plugin\nexport default {\"addContact\":\"Contacts_addContact__xp-ga\",\"searchShowBtn\":\"Contacts_searchShowBtn__s1agf\",\"buttons\":\"Contacts_buttons__KiE6Y\"};","import AddContactForm from '../../components/AddContactForm/AddContactForm';\nimport Filter from '../../components/Filter/Filter';\nimport ListOfContacts from '../../components/ListOfContacts/ListOfContacts';\nimport Loader from '../../components/Loader/Loader';\nimport { ToastContainer } from 'react-toastify';\nimport addIcon from '../../icons/plus.png';\nimport minusIcon from '../../icons/minus-sign.png';\nimport searchIcon from '../../icons/search.png';\nimport cancelIcon from '../../icons/forbidden.png';\nimport { useState, useEffect } from 'react';\nimport { useGetContactsQuery } from '../../redux/contacts/contactsAPI';\nimport css from './Contacts.module.css';\n\nconst Contacts = () => {\n  const { data, isSuccess, isLoading, isError, refetch } = useGetContactsQuery();\n  const [showAddContact, setShowAddContact] = useState(false);\n  const [showSearch, setShowSearch] = useState(false);\n\n  // Get current value of token from localStorage\n  const dataTokenStorage = localStorage.getItem('persist:auth');\n  const parsedData = JSON.parse(dataTokenStorage);\n  const token = JSON.parse(parsedData.token);\n\n// If token will change - we refetch list of contacts\n useEffect(() => {\n  refetch();\n }, [refetch, token])\n\n  return (\n    <div className=\"container\">\n      <div className={css.buttons}>\n        <button\n          type=\"button\"\n          onClick={() => setShowAddContact(!showAddContact)}\n          className={css.addContact}\n          title='Button for show add contact form'\n        >\n          {' '}\n          {showAddContact ? (\n            <img\n              src={minusIcon}\n              alt=\"Icon for hidden add contact form\"\n              width={20}\n            />\n          ) : (\n            <img src={addIcon} alt=\"Icon for add button\" width={20} />\n          )}\n        </button>\n        {data?.length === 0 ? <h2> No contacts in phonebook</h2> :  <h2>Contacts:</h2>}\n        <button\n          type=\"button\"\n          onClick={() => setShowSearch(!showSearch)}\n          className={css.searchShowBtn}\n          title='Button for open edit contact form'\n        >\n          {showSearch ?  <img src={cancelIcon} alt=\"Cancel search icon\" width={20} /> :  <img src={searchIcon} alt=\"Search icon button\" width={20} />}\n        </button>\n      </div>\n      {showAddContact && (\n        <AddContactForm data={data} setShowAddContact={setShowAddContact} />\n      )}\n      {showSearch && <Filter />}\n      {isLoading && <Loader />}\n      {!isLoading && !isError && data.length !== 0 && (\n        <ListOfContacts data={data} isSuccess={isSuccess} />\n      )}\n      <ToastContainer\n        position=\"top-right\"\n        autoClose={3000}\n        hideProgressBar={false}\n        newestOnTop={false}\n        closeOnClick\n        rtl={false}\n        pauseOnFocusLoss\n        draggable\n        pauseOnHover={false}\n        theme=\"dark\"\n        style={{ width: 200, marginLeft: 'auto' }}\n      />\n    </div>\n  );\n};\n\nexport default Contacts;\n"],"names":["initialValues","name","number","schema","yup","shape","min","max","required","_ref","data","setShowAddContact","_useAddContactMutatio","useAddContactMutation","_useAddContactMutatio2","_slicedToArray","addContact","isLoading","_jsx","Formik","validationSchema","onSubmit","dataForm","_ref2","resetForm","map","contact","includes","toast","replace","concat","children","_jsxs","Form","className","css","autoComplete","htmlFor","Field","type","pattern","ErrorMessage","component","title","Loader","dispatch","useDispatch","placeholder","onChange","e","searchQuery","target","value","setQuery","toLowerCase","setNewName","setNewNumber","onClick","id","_useState","useState","_useState2","showEditForm","setShowEditForm","_useState3","_useState4","newName","_useState5","_useState6","newNumber","_useDeleteContactMuta","useDeleteContactMutation","_useDeleteContactMuta2","deleteContact","isDeleting","useGetContactsQuery","_useChangeContactMuta","useChangeContactMutation","changeContact","contactExistName","some","cont","_Fragment","EditContactForm","trim","src","cancelIcon","alt","width","selectQuery","state","filter","query","isSuccess","useSelector","filteredContacts","item","Contact","_useGetContactsQuery","isError","refetch","showAddContact","showSearch","setShowSearch","dataTokenStorage","localStorage","getItem","parsedData","JSON","parse","token","useEffect","length","AddContactForm","Filter","ListOfContacts","ToastContainer","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","theme","style","marginLeft"],"sourceRoot":""}
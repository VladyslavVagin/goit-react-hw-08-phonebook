{"version":3,"file":"static/js/709.0ae92a81.chunk.js","mappings":"kMACA,EAA4B,yBAA5B,EAA6D,qBAA7D,EAA0F,qBAA1F,EAA2H,yBAA3H,EAAgK,yBAAhK,EAAuM,2B,uCCKjMA,EAAgB,CACpBC,MAAO,GACPC,SAAU,IAGNC,EAASC,EAAAA,KAAaC,MAAM,CAChCJ,MAAOG,EAAAA,KAAaE,IAAI,GAAGC,WAC3BL,SAAUE,EAAAA,KAAaE,IAAI,GAAGE,IAAI,IAAID,aA2CxC,EAxCc,WACZ,IAAME,GAAWC,EAAAA,EAAAA,MAQjB,OACEC,EAAAA,EAAAA,KAAA,OAAAC,UACED,EAAAA,EAAAA,KAACE,EAAAA,GAAM,CACLb,cAAeA,EACfc,SAVoB,SAACC,EAAQC,GAAmB,IAAhBC,EAASD,EAATC,UAClCC,QAAQC,IAAIJ,GACZN,GAASW,EAAAA,EAAAA,IAAML,IACfE,GACJ,EAOMI,iBAAkBlB,EAAOS,UAEzBU,EAAAA,EAAAA,MAACC,EAAAA,GAAI,CAACC,UAAWC,EAAcb,SAAA,EAC7BD,EAAAA,EAAAA,KAAA,MAAIa,UAAWC,EAAcb,SAAC,gBAC9BU,EAAAA,EAAAA,MAAA,SAAOI,QAAQ,QAAQF,UAAWC,EAAUb,SAAA,EAC1CD,EAAAA,EAAAA,KAAA,QAAMa,UAAWC,EAAcb,SAAC,MAAY,UAC5CD,EAAAA,EAAAA,KAACgB,EAAAA,GAAK,CAACC,KAAK,QAAQC,KAAK,QAAQtB,UAAQ,EAACiB,UAAWC,QAEvDH,EAAAA,EAAAA,MAAA,SAAOI,QAAQ,WAAWF,UAAWC,EAAUb,SAAA,EAC7CD,EAAAA,EAAAA,KAAA,QAAMa,UAAWC,EAAcb,SAAC,MAAY,aAC5CD,EAAAA,EAAAA,KAACgB,EAAAA,GAAK,CACJC,KAAK,WACLC,KAAK,WACLtB,UAAQ,EACRiB,UAAWC,QAGfd,EAAAA,EAAAA,KAAA,UAAQiB,KAAK,SAASJ,UAAWC,EAAgBb,SAAC,gBAO5D,C","sources":["webpack://react-homework-template/./src/pages/Login/Login.module.css?b420","pages/Login/Login.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"formLogin\":\"Login_formLogin__tJzhP\",\"input\":\"Login_input__6Emyd\",\"label\":\"Login_label__MvF1C\",\"astericks\":\"Login_astericks__qilje\",\"titlePage\":\"Login_titlePage__5L0yK\",\"loginSubmit\":\"Login_loginSubmit__rFaZo\"};","import { Formik, Form, Field } from 'formik';\nimport css from './Login.module.css';\nimport * as yup from 'yup';\nimport { logIn } from '../../redux/auth/operations';\nimport { useDispatch } from 'react-redux';\n\nconst initialValues = {\n  email: '',\n  password: '',\n};\n\nconst schema = yup.object().shape({\n  email: yup.string().min(5).required(),\n  password: yup.string().min(6).max(16).required(),\n});\n\nconst Login = () => {\n  const dispatch = useDispatch();\n\n  const handleSubmitLogin = (dataForm, {resetForm}) => {\n      console.log(dataForm);\n      dispatch(logIn(dataForm));\n      resetForm();\n  };\n\n  return (\n    <div>\n      <Formik\n        initialValues={initialValues}\n        onSubmit={handleSubmitLogin}\n        validationSchema={schema}\n      >\n        <Form className={css.formLogin}>\n          <h2 className={css.titlePage}>Login form</h2>\n          <label htmlFor=\"email\" className={css.label}>\n            <span className={css.astericks}>&#42;</span>Email:\n            <Field type=\"email\" name=\"email\" required className={css.input} />\n          </label>\n          <label htmlFor=\"password\" className={css.label}>\n            <span className={css.astericks}>&#42;</span>Password:\n            <Field\n              type=\"password\"\n              name=\"password\"\n              required\n              className={css.input}\n            />\n          </label>\n          <button type=\"submit\" className={css.loginSubmit}>\n           Login\n          </button>\n        </Form>\n      </Formik>\n    </div>\n  );\n};\n\nexport default Login;"],"names":["initialValues","email","password","schema","yup","shape","min","required","max","dispatch","useDispatch","_jsx","children","Formik","onSubmit","dataForm","_ref","resetForm","console","log","logIn","validationSchema","_jsxs","Form","className","css","htmlFor","Field","type","name"],"sourceRoot":""}
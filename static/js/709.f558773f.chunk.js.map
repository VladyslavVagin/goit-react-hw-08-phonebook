{"version":3,"file":"static/js/709.f558773f.chunk.js","mappings":"6JAgBA,IAde,WACb,OACEA,EAAAA,EAAAA,KAACC,EAAAA,GAAY,CACXC,SAAS,EACTC,OAAO,KACPC,MAAM,KACNC,MAAM,UACNC,UAAU,wBACVC,aAAc,CAAC,EACfC,aAAa,IAGnB,C,sGCbA,EAA4B,yBAA5B,EAA6D,qBAA7D,EAA0F,qBAA1F,EAA2H,yBAA3H,EAAgK,yBAAhK,EAAuM,2B,0DCQjMC,EAAgB,CACpBC,MAAO,GACPC,SAAU,IAGNC,EAASC,EAAAA,KAAaC,MAAM,CAChCJ,MAAOG,EAAAA,KAAaE,IAAI,GAAGC,WAC3BL,SAAUE,EAAAA,KAAaE,IAAI,GAAGE,IAAI,IAAID,aAkExC,EA/Dc,WACZ,IAAAE,GAAwCC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAhDI,EAAYF,EAAA,GAAEG,EAAeH,EAAA,GAC9BI,GAAWC,EAAAA,EAAAA,MACTC,GAAcC,EAAAA,EAAAA,KAAdD,UAOR,OACE1B,EAAAA,EAAAA,KAAA,OAAA4B,UACE5B,EAAAA,EAAAA,KAAC6B,EAAAA,GAAM,CACLpB,cAAeA,EACfqB,SAToB,SAACC,EAAQC,GAAqB,IAAjBC,EAASD,EAATC,UACrCT,GAASU,EAAAA,EAAAA,IAAMH,IACfE,GACF,EAOME,iBAAkBvB,EAAOgB,UAEzBQ,EAAAA,EAAAA,MAACC,EAAAA,GAAI,CAACC,UAAWC,EAAcX,SAAA,EAC7B5B,EAAAA,EAAAA,KAAA,MAAIsC,UAAWC,EAAcX,SAAC,gBAC9BQ,EAAAA,EAAAA,MAAA,SAAOI,QAAQ,QAAQF,UAAWC,EAAUX,SAAA,EAC1C5B,EAAAA,EAAAA,KAAA,QAAMsC,UAAWC,EAAcX,SAAC,MAAY,UAC5C5B,EAAAA,EAAAA,KAACyC,EAAAA,GAAK,CACJC,KAAK,QACLC,KAAK,QACL3B,UAAQ,EACRsB,UAAWC,EACX,aAAW,iCAGfH,EAAAA,EAAAA,MAAA,SAAOI,QAAQ,WAAWF,UAAWC,EAAUX,SAAA,EAC7C5B,EAAAA,EAAAA,KAAA,QAAMsC,UAAWC,EAAcX,SAAC,MAAY,aAC5C5B,EAAAA,EAAAA,KAACyC,EAAAA,GAAK,CACJC,KAAMpB,EAAe,OAAS,WAC9BqB,KAAK,WACL3B,UAAQ,EACRsB,UAAWC,EACX,aAAW,qCAGfH,EAAAA,EAAAA,MAAA,SAAOI,QAAQ,SAASF,UAAWC,EAAUX,SAAA,EAC3C5B,EAAAA,EAAAA,KAACyC,EAAAA,GAAK,CACJC,KAAK,WACLC,KAAK,SACLC,SAAU,kBAAMrB,GAAiBD,EAAa,EAC9CuB,QAASvB,EACT,aAAW,kFACV,IACFA,EAAe,gBAAkB,oBAEpCtB,EAAAA,EAAAA,KAAA,UACE0C,KAAK,SACLJ,UAAWC,EACX,aAAW,+BACXO,MAAM,gBAAelB,SAEpBF,GAAY1B,EAAAA,EAAAA,KAAC+C,EAAAA,EAAM,IAAM,gBAMtC,C","sources":["components/Loader/Loader.jsx","webpack://react-homework-template/./src/pages/Login/Login.module.css?b420","pages/Login/Login.jsx"],"sourcesContent":["import { ThreeCircles } from 'react-loader-spinner';\n\nconst Loader = () => {\n  return (\n    <ThreeCircles\n      visible={true}\n      height=\"24\"\n      width=\"24\"\n      color=\"#d18f00\"\n      ariaLabel=\"three-circles-loading\"\n      wrapperStyle={{}}\n      wrapperClass=\"\"\n    />\n  );\n};\n\nexport default Loader;\n","// extracted by mini-css-extract-plugin\nexport default {\"formLogin\":\"Login_formLogin__tJzhP\",\"input\":\"Login_input__6Emyd\",\"label\":\"Login_label__MvF1C\",\"astericks\":\"Login_astericks__qilje\",\"titlePage\":\"Login_titlePage__5L0yK\",\"loginSubmit\":\"Login_loginSubmit__rFaZo\"};","import { Formik, Form, Field } from 'formik';\nimport { useState } from 'react';\nimport css from './Login.module.css';\nimport * as yup from 'yup';\nimport { logIn } from '../../redux/auth/operations';\nimport { useDispatch } from 'react-redux';\nimport { useAuth } from '../../hooks/useAuth';\nimport Loader from '../../components/Loader/Loader';\n\nconst initialValues = {\n  email: '',\n  password: '',\n};\n\nconst schema = yup.object().shape({\n  email: yup.string().min(5).required(),\n  password: yup.string().min(6).max(16).required(),\n});\n\nconst Login = () => {\n  const [showPassword, setShowPassword] = useState(false);\n  const dispatch = useDispatch();\n  const { isLoading } = useAuth();\n\n  const handleSubmitLogin = (dataForm, { resetForm }) => {\n    dispatch(logIn(dataForm));\n    resetForm();\n  };\n\n  return (\n    <div>\n      <Formik\n        initialValues={initialValues}\n        onSubmit={handleSubmitLogin}\n        validationSchema={schema}\n      >\n        <Form className={css.formLogin}>\n          <h2 className={css.titlePage}>Login form</h2>\n          <label htmlFor=\"email\" className={css.label}>\n            <span className={css.astericks}>&#42;</span>Email:\n            <Field\n              type=\"email\"\n              name=\"email\"\n              required\n              className={css.input}\n              aria-label=\"Input for type your name\"\n            />\n          </label>\n          <label htmlFor=\"password\" className={css.label}>\n            <span className={css.astericks}>&#42;</span>Password:\n            <Field\n              type={showPassword ? 'text' : 'password'}\n              name=\"password\"\n              required\n              className={css.input}\n              aria-label=\"Input for type your password\"\n            />\n          </label>\n          <label htmlFor=\"toggle\" className={css.label}>\n            <Field\n              type=\"checkbox\"\n              name=\"toggle\"\n              onChange={() => setShowPassword(!showPassword)}\n              checked={showPassword}\n              aria-label=\"Checkbox for show or hide your password. If checked - password will be shown.\"\n            />{' '}\n            {showPassword ? 'Hide password' : 'Show password'}\n          </label>\n          <button\n            type=\"submit\"\n            className={css.loginSubmit}\n            aria-label=\"Button for submit login form\"\n            title=\"Confirm login\"\n          >\n            {isLoading ? <Loader /> : 'Login'}\n          </button>\n        </Form>\n      </Formik>\n    </div>\n  );\n};\n\nexport default Login;\n"],"names":["_jsx","ThreeCircles","visible","height","width","color","ariaLabel","wrapperStyle","wrapperClass","initialValues","email","password","schema","yup","shape","min","required","max","_useState","useState","_useState2","_slicedToArray","showPassword","setShowPassword","dispatch","useDispatch","isLoading","useAuth","children","Formik","onSubmit","dataForm","_ref","resetForm","logIn","validationSchema","_jsxs","Form","className","css","htmlFor","Field","type","name","onChange","checked","title","Loader"],"sourceRoot":""}